// +build !ignore_autogenerated

/*
Copyright 2018 CC LIN.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1

import (
	cclin "github.com/cclin81922/k8s-apiserver/pkg/apis/cclin"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	unsafe "unsafe"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1_Lin_To_cclin_Lin,
		Convert_cclin_Lin_To_v1_Lin,
		Convert_v1_LinList_To_cclin_LinList,
		Convert_cclin_LinList_To_v1_LinList,
		Convert_v1_LinSpec_To_cclin_LinSpec,
		Convert_cclin_LinSpec_To_v1_LinSpec,
		Convert_v1_LinStatus_To_cclin_LinStatus,
		Convert_cclin_LinStatus_To_v1_LinStatus,
		Convert_v1_LinStatusStrategy_To_cclin_LinStatusStrategy,
		Convert_cclin_LinStatusStrategy_To_v1_LinStatusStrategy,
		Convert_v1_LinStrategy_To_cclin_LinStrategy,
		Convert_cclin_LinStrategy_To_v1_LinStrategy,
	)
}

func autoConvert_v1_Lin_To_cclin_Lin(in *Lin, out *cclin.Lin, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_LinSpec_To_cclin_LinSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1_LinStatus_To_cclin_LinStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_Lin_To_cclin_Lin is an autogenerated conversion function.
func Convert_v1_Lin_To_cclin_Lin(in *Lin, out *cclin.Lin, s conversion.Scope) error {
	return autoConvert_v1_Lin_To_cclin_Lin(in, out, s)
}

func autoConvert_cclin_Lin_To_v1_Lin(in *cclin.Lin, out *Lin, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_cclin_LinSpec_To_v1_LinSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_cclin_LinStatus_To_v1_LinStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_cclin_Lin_To_v1_Lin is an autogenerated conversion function.
func Convert_cclin_Lin_To_v1_Lin(in *cclin.Lin, out *Lin, s conversion.Scope) error {
	return autoConvert_cclin_Lin_To_v1_Lin(in, out, s)
}

func autoConvert_v1_LinList_To_cclin_LinList(in *LinList, out *cclin.LinList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]cclin.Lin)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_LinList_To_cclin_LinList is an autogenerated conversion function.
func Convert_v1_LinList_To_cclin_LinList(in *LinList, out *cclin.LinList, s conversion.Scope) error {
	return autoConvert_v1_LinList_To_cclin_LinList(in, out, s)
}

func autoConvert_cclin_LinList_To_v1_LinList(in *cclin.LinList, out *LinList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Lin)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_cclin_LinList_To_v1_LinList is an autogenerated conversion function.
func Convert_cclin_LinList_To_v1_LinList(in *cclin.LinList, out *LinList, s conversion.Scope) error {
	return autoConvert_cclin_LinList_To_v1_LinList(in, out, s)
}

func autoConvert_v1_LinSpec_To_cclin_LinSpec(in *LinSpec, out *cclin.LinSpec, s conversion.Scope) error {
	return nil
}

// Convert_v1_LinSpec_To_cclin_LinSpec is an autogenerated conversion function.
func Convert_v1_LinSpec_To_cclin_LinSpec(in *LinSpec, out *cclin.LinSpec, s conversion.Scope) error {
	return autoConvert_v1_LinSpec_To_cclin_LinSpec(in, out, s)
}

func autoConvert_cclin_LinSpec_To_v1_LinSpec(in *cclin.LinSpec, out *LinSpec, s conversion.Scope) error {
	return nil
}

// Convert_cclin_LinSpec_To_v1_LinSpec is an autogenerated conversion function.
func Convert_cclin_LinSpec_To_v1_LinSpec(in *cclin.LinSpec, out *LinSpec, s conversion.Scope) error {
	return autoConvert_cclin_LinSpec_To_v1_LinSpec(in, out, s)
}

func autoConvert_v1_LinStatus_To_cclin_LinStatus(in *LinStatus, out *cclin.LinStatus, s conversion.Scope) error {
	return nil
}

// Convert_v1_LinStatus_To_cclin_LinStatus is an autogenerated conversion function.
func Convert_v1_LinStatus_To_cclin_LinStatus(in *LinStatus, out *cclin.LinStatus, s conversion.Scope) error {
	return autoConvert_v1_LinStatus_To_cclin_LinStatus(in, out, s)
}

func autoConvert_cclin_LinStatus_To_v1_LinStatus(in *cclin.LinStatus, out *LinStatus, s conversion.Scope) error {
	return nil
}

// Convert_cclin_LinStatus_To_v1_LinStatus is an autogenerated conversion function.
func Convert_cclin_LinStatus_To_v1_LinStatus(in *cclin.LinStatus, out *LinStatus, s conversion.Scope) error {
	return autoConvert_cclin_LinStatus_To_v1_LinStatus(in, out, s)
}

func autoConvert_v1_LinStatusStrategy_To_cclin_LinStatusStrategy(in *LinStatusStrategy, out *cclin.LinStatusStrategy, s conversion.Scope) error {
	out.DefaultStatusStorageStrategy = in.DefaultStatusStorageStrategy
	return nil
}

// Convert_v1_LinStatusStrategy_To_cclin_LinStatusStrategy is an autogenerated conversion function.
func Convert_v1_LinStatusStrategy_To_cclin_LinStatusStrategy(in *LinStatusStrategy, out *cclin.LinStatusStrategy, s conversion.Scope) error {
	return autoConvert_v1_LinStatusStrategy_To_cclin_LinStatusStrategy(in, out, s)
}

func autoConvert_cclin_LinStatusStrategy_To_v1_LinStatusStrategy(in *cclin.LinStatusStrategy, out *LinStatusStrategy, s conversion.Scope) error {
	out.DefaultStatusStorageStrategy = in.DefaultStatusStorageStrategy
	return nil
}

// Convert_cclin_LinStatusStrategy_To_v1_LinStatusStrategy is an autogenerated conversion function.
func Convert_cclin_LinStatusStrategy_To_v1_LinStatusStrategy(in *cclin.LinStatusStrategy, out *LinStatusStrategy, s conversion.Scope) error {
	return autoConvert_cclin_LinStatusStrategy_To_v1_LinStatusStrategy(in, out, s)
}

func autoConvert_v1_LinStrategy_To_cclin_LinStrategy(in *LinStrategy, out *cclin.LinStrategy, s conversion.Scope) error {
	out.DefaultStorageStrategy = in.DefaultStorageStrategy
	return nil
}

// Convert_v1_LinStrategy_To_cclin_LinStrategy is an autogenerated conversion function.
func Convert_v1_LinStrategy_To_cclin_LinStrategy(in *LinStrategy, out *cclin.LinStrategy, s conversion.Scope) error {
	return autoConvert_v1_LinStrategy_To_cclin_LinStrategy(in, out, s)
}

func autoConvert_cclin_LinStrategy_To_v1_LinStrategy(in *cclin.LinStrategy, out *LinStrategy, s conversion.Scope) error {
	out.DefaultStorageStrategy = in.DefaultStorageStrategy
	return nil
}

// Convert_cclin_LinStrategy_To_v1_LinStrategy is an autogenerated conversion function.
func Convert_cclin_LinStrategy_To_v1_LinStrategy(in *cclin.LinStrategy, out *LinStrategy, s conversion.Scope) error {
	return autoConvert_cclin_LinStrategy_To_v1_LinStrategy(in, out, s)
}
